name: Tests de integraci√≥n TipoPago - DEV-QA

on:
  push:
    branches:
      - DEV-QA
    paths:
      - 'src/components/TipoPago/**'
      - 'tests/integration/tipopago.test.js'
      - '.github/workflows/dev-qa-tipopago.yml'
      - 'package.json'
      - 'yarn.lock'
      - 'package-lock.json'
  pull_request:
    branches:
      - DEV-QA
    paths:
      - 'src/components/TipoPago/**'
      - 'tests/integration/tipopago.test.js'
      - '.github/workflows/dev-qa-tipopago.yml'
      - 'package.json'
      - 'yarn.lock'
      - 'package-lock.json'

jobs:
  test:
    name: Ejecutar pruebas de integraci√≥n TipoPago
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Instalar dependencias
        run: |
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      - name: Ejecutar linter
        run: |
          if [ -f yarn.lock ]; then
            yarn lint
          else
            npm run lint
          fi

      - name: Ejecutar pruebas unitarias
        run: |
          if [ -f yarn.lock ]; then
            yarn test:unit
          else
            npm run test:unit
          fi

      - name: Ejecutar pruebas de integraci√≥n TipoPago
        run: |
          if [ -f yarn.lock ]; then
            yarn test tests/integration/tipopago.test.js -- --coverage
          else
            npm test -- tests/integration/tipopago.test.js --coverage
          fi

      - name: Generar reporte de cobertura
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: integration-tests
          name: tipopago-coverage

      - name: Subir resultados de pruebas
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/

      - name: Comentar resultados en PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            
            const comment = `
            ## üìä Resultados de Pruebas - TipoPago
            
            ### Cobertura de C√≥digo:
            - **L√≠neas**: ${total.lines.pct}%
            - **Funciones**: ${total.functions.pct}%
            - **Ramas**: ${total.branches.pct}%
            - **Declaraciones**: ${total.statements.pct}%
            
            ‚úÖ Todas las pruebas pasaron exitosamente.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  performance:
    name: Pruebas de rendimiento
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4
        
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Build de producci√≥n
        run: npm run build
        
      - name: Analizar bundle
        run: |
          npm install -g webpack-bundle-analyzer
          npx webpack-bundle-analyzer build/static/js/*.js --mode static --report bundle-report.html
          
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true

  security:
    name: An√°lisis de seguridad
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4
        
      - name: Ejecutar audit de seguridad
        run: |
          if [ -f yarn.lock ]; then
            yarn audit --level moderate
          else
            npm audit --audit-level=moderate
          fi
          
      - name: An√°lisis SAST con Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/react

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, performance, security]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v4
        
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Instalar y construir
        run: |
          npm ci
          npm run build
          
      - name: Deploy a Vercel Preview
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}