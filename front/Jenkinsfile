pipeline {
    agent any
    
    stages {
        stage('Instalar') {
            steps {
                bat 'npm install'  // Cambiado de 'sh' a 'bat' para Windows
            }
        }
        
        stage('Pruebas') {
            steps {
                bat 'npm run test:integration -- --watchAll=false'  // Usa 'bat' en lugar de 'sh'
            }
        }
        
        stage('Build') {
            when { 
                anyOf { 
                    branch 'main'
                    branch 'DEV-QA' 
                } 
            }
            steps {
                bat 'npm run build'  // Cambiado a 'bat'
            }
        }
        
        stage('Deploy') {
            when { branch 'main' }
            steps {
                echo 'Desplegando a producción...'
                // Ejemplo para Windows (puedes usar bat o powershell):
                bat 'echo Realizando deploy...'
                // Si usas un comando específico (ej: AWS, Firebase, etc.), ajústalo aquí.
            }
        }
    }
    
    post {
        success {
            emailext (
                subject: '✅ Pipeline Exitoso - TipoPago',
                body: 'El pipeline se ejecutó correctamente en la rama ${env.BRANCH_NAME}.',
                to: 'degutierrezh02@gmail.com'  // Email actualizado
            )
        }
        failure {
            emailext (
                subject: '❌ Pipeline Fallido - TipoPago',
                body: 'El pipeline falló en la rama ${env.BRANCH_NAME}. Revisar Jenkins: ${env.BUILD_URL}',
                to: 'degutierrezh02@gmail.com'  // Email actualizado
            )
        }
    }
}