pipeline {
    agent any
    
    options {
        timeout(time: 30, unit: 'MINUTES')
        retry(1)
    }

    triggers {
        githubPush()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Instalar Dependencias') {
            steps {
                dir('front') {
                    script {
                        if (isUnix()) {
                            sh 'npm ci --silent'
                        } else {
                            bat 'npm ci --silent'
                        }
                    }
                }
            }
        }

        stage('Ejecutar Pruebas Unitarias') {
            steps {
                dir('front') {
                    script {
                        if (isUnix()) {
                            sh 'npm test -- --ci --watchAll=false --testPathPattern=tests'
                        } else {
                            bat 'npm test -- --ci --watchAll=false --testPathPattern=tests --passWithNoTests'
                        }
                    }
                }
            }
        }

        stage('Ejecutar Pruebas de Integraci√≥n') {
            steps {
                dir('front') {
                    script {
                        if (isUnix()) {
                            sh 'npm test -- --ci --watchAll=false --testPathPattern=tests/integration'
                        } else {
                            bat 'npm test -- --ci --watchAll=false --testPathPattern=tests/integration --passWithNoTests'
                        }
                    }
                }
            }
        }

        stage('Build') {
            steps {
                dir('front') {
                    script {
                        if (isUnix()) {
                            sh 'npm run build'
                        } else {
                            bat 'npm run build'
                        }
                    }
                }
            }
        }

        stage('Merge a MAIN') {
            when {
                branch 'DEV-QA'
            }
            steps {
                script {
                    if (isUnix()) {
                        sh """
                            git config user.name "jenkins-ci"
                            git config user.email "jenkins@ci.com"
                            git checkout main
                            git pull origin main
                            git merge origin/DEV-QA --no-ff -m "Merge autom√°tico desde DEV-QA"
                            git push origin main
                        """
                    } else {
                        bat """
                            git config user.name "jenkins-ci"
                            git config user.email "jenkins@ci.com"
                            git checkout main
                            git pull origin main
                            git merge origin/DEV-QA --no-ff -m "Merge autom√°tico desde DEV-QA"
                            git push origin main
                        """
                    }
                }
            }
            post {
                success {
                    emailext(
                        subject: "‚úÖ Merge Exitoso DEV-QA ‚Üí MAIN",
                        body: """
                            üéâ Merge completado exitosamente!
                            
                            ‚úÖ Todas las pruebas pasaron
                            ‚úÖ Build exitoso
                            ‚úÖ Merge DEV-QA ‚Üí MAIN completado
                            
                            El c√≥digo est√° listo para producci√≥n.
                        """,
                        to: 'degutierrezh02@gmail.com'
                    )
                }
                failure {
                    emailext(
                        subject: "‚ùå Error en Merge DEV-QA ‚Üí MAIN",
                        body: """
                            ‚ö†Ô∏è El merge fall√≥!
                            
                            Revisar conflictos o problemas de Git.
                            No se despleg√≥ a producci√≥n.
                        """,
                        to: 'degutierrezh02@gmail.com'
                    )
                }
            }
        }

        stage('Deploy a Producci√≥n') {
            when {
                branch 'main'
            }
            steps {
                dir('front') {
                    script {
                        echo 'üöÄ Desplegando a producci√≥n...'
                        
                        if (isUnix()) {
                            sh '''
                                echo "Copiando archivos a producci√≥n..."
                                # cp -r build/* /var/www/html/
                            '''
                        } else {
                            bat '''
                                echo "Copiando archivos a producci√≥n..."
                                REM xcopy build\\* C:\\inetpub\\wwwroot\\ /E /Y
                            '''
                        }
                    }
                }
            }
            post {
                success {
                    emailext(
                        subject: "üöÄ Deploy a Producci√≥n Exitoso",
                        body: """
                            üéâ Aplicaci√≥n desplegada exitosamente!
                            
                            ‚úÖ Deploy completado
                            üåê Aplicaci√≥n disponible en producci√≥n
                        """,
                        to: 'degutierrezh02@gmail.com'
                    )
                }
                failure {
                    emailext(
                        subject: "‚ùå Error en Deploy a Producci√≥n",
                        body: """
                            ‚ö†Ô∏è El deploy fall√≥!
                            
                            Revisar configuraci√≥n de servidor.
                        """,
                        to: 'degutierrezh02@gmail.com'
                    )
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        
        failure {
            emailext(
                subject: "‚ùå Pipeline Fallido - Pruebas No Pasaron",
                body: """
                    ‚ö†Ô∏è El pipeline fall√≥ y NO se hizo merge ni deploy.
                    
                    üîç Posibles causas:
                    ‚Ä¢ Pruebas unitarias fallaron
                    ‚Ä¢ Pruebas de integraci√≥n fallaron
                    ‚Ä¢ Error en el build
                    
                    ‚ùó Corregir errores antes del pr√≥ximo push.
                """,
                to: 'degutierrezh02@gmail.com'
            )
        }
    }
}